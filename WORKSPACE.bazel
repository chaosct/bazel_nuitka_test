workspace(
    name = "bazel_nuitka_test",
)

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "rules_python",
    sha256 = "5fa3c738d33acca3b97622a13a741129f67ef43f5fdfcec63b29374cc0574c29",
    strip_prefix = "rules_python-0.9.0",
    url = "https://github.com/bazelbuild/rules_python/archive/refs/tags/0.9.0.tar.gz",
)

load("@rules_python//python:repositories.bzl", "python_register_toolchains")

python_register_toolchains(
    name = "python_toolchain",
    # Available versions are listed in @rules_python//python:versions.bzl /
    # https://github.com/bazelbuild/rules_python/blob/main/python/versions.bzl
    # We recommend using the same version your team is already standardized on.
    python_version = "3.9",
)

load("@python_toolchain//:defs.bzl", "interpreter")
load("@rules_python//python:pip.bzl", "pip_install", "pip_parse")

# Create a central external repo, @python_deps, that contains Bazel targets for all the
# third-party packages specified in 'requirements_lock.txt', in turn generated
# from 'requirements.txt' via compile_pip_requirements.
pip_parse(
    name = "python_deps",
    python_interpreter_target = interpreter,
    requirements_lock = "//third_party:requirements_lock.txt",
)

load("@python_deps//:requirements.bzl", "install_deps")

# Initialize repositories for all packages in requirements_lock.txt.
install_deps()
